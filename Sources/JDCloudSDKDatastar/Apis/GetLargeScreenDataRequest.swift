/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   大屏数据查询接口
   陕西苹果大屏数据查询接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  根据区域、行业、一级指标、二级指标、起始时间等条件查询数据
public class GetLargeScreenDataRequest:JdCloudRequest
{
    /// 查询区域，比如某某省或某某市（可选区域以最终授权为准）
    var region:String

    /// 查询行业，比如某个水果或者农作物（可选行业以最终授权为准）
    var industry:String

    /// 查询起始时间，格式如下：yyyy-MM-dd
    var startDate:String

    /// 查询结束时间，格式如下：yyyy-MM-dd
    var endDate:String

    /// 数据对应的第一级分析指标（可选一级指标以最终授权为准）
    var firstIndex:String

    /// 数据对应的第二级分析指标，如不填写，则默认把一级指标下的所有二级指标都查询出来（可选二级指标以最终授权为准）
    var secondIndex:String?


    public init(regionId: String,region:String,industry:String,startDate:String,endDate:String,firstIndex:String){
        self.region = region
        self.industry = industry
        self.startDate = startDate
        self.endDate = endDate
        self.firstIndex = firstIndex
        super.init(regionId: regionId)
    }


    enum GetLargeScreenDataRequestRequestCodingKeys: String, CodingKey {
        case region
        case industry
        case startDate
        case endDate
        case firstIndex
        case secondIndex
    }

    public override func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: GetLargeScreenDataRequestRequestCodingKeys.self)
        try container.encode(region, forKey: .region)
        try container.encode(industry, forKey: .industry)
        try container.encode(startDate, forKey: .startDate)
        try container.encode(endDate, forKey: .endDate)
        try container.encode(firstIndex, forKey: .firstIndex)
        try container.encode(secondIndex, forKey: .secondIndex)

    }
}
