/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   弹性伸缩策略
   弹性伸缩动态策略和定时任务相关操作接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  修改伸缩组定时策略
public class ModifyScheduledActionRequest:JdCloudRequest
{
    /// 实例数量
    var amount:Int64

    /// 按天执行时的时间间隔
    var dayInterval:Int64?

    /// 定时任务描述
    var description:String?

    /// 执行时间段-终止，当为重复任务是，结束时间必填，格式为 yyyy-MM-dd&#39;T&#39;HH:mm:ssZ ，例如：2018-06-01T00:00:00+0800
    var endTime:String?

    /// d-天, w-周, m-月
    var every:String?

    /// 按月执行时，执行的结束日期，如每月10号结束执行
    var monthEnd:Int64?

    /// 按月执行时，执行的开始日期，如每月5号开始执行
    var monthStart:Int64?

    /// 定时任务名称
    var name:String

    /// 0-仅一次, 1-重复
    var recurrence:Int64

    /// 伸缩类型：0-scale out弹出,1-scale in收缩
    var scaleType:Int64

    /// 起始时间段-起始，格式为 yyyy-MM-dd&#39;T&#39;HH:mm:ssZ ，例如：2018-06-01T00:00:00+0800
    var startTime:String

    /// 按周执行时，具体执行的星期几
    var weekDays:Int64?

    /// 组uuid
    var asGroupUuid:String

    /// 定时任务uuid
    var scheduledActionUuid:String


    public init(regionId: String,amount:Int64,name:String,recurrence:Int64,scaleType:Int64,startTime:String,asGroupUuid:String,scheduledActionUuid:String){
        self.amount = amount
        self.name = name
        self.recurrence = recurrence
        self.scaleType = scaleType
        self.startTime = startTime
        self.asGroupUuid = asGroupUuid
        self.scheduledActionUuid = scheduledActionUuid
        super.init(regionId: regionId)
    }


    enum ModifyScheduledActionRequestRequestCodingKeys: String, CodingKey {
        case amount
        case dayInterval
        case description
        case endTime
        case every
        case monthEnd
        case monthStart
        case name
        case recurrence
        case scaleType
        case startTime
        case weekDays
        case asGroupUuid
        case scheduledActionUuid
    }

    public override func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: ModifyScheduledActionRequestRequestCodingKeys.self)
        try container.encode(amount, forKey: .amount)
        try container.encode(dayInterval, forKey: .dayInterval)
        try container.encode(description, forKey: .description)
        try container.encode(endTime, forKey: .endTime)
        try container.encode(every, forKey: .every)
        try container.encode(monthEnd, forKey: .monthEnd)
        try container.encode(monthStart, forKey: .monthStart)
        try container.encode(name, forKey: .name)
        try container.encode(recurrence, forKey: .recurrence)
        try container.encode(scaleType, forKey: .scaleType)
        try container.encode(startTime, forKey: .startTime)
        try container.encode(weekDays, forKey: .weekDays)
        try container.encode(asGroupUuid, forKey: .asGroupUuid)
        try container.encode(scheduledActionUuid, forKey: .scheduledActionUuid)

    }
}
