/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   云部署
   部署相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  modifyDeployRequest
public class ModifyDeployRequest:JdCloudRequest
{
    /// 描述
    var desc:String?

    /// 部署来源：1url，2云编译，3云存储
    var deploySource:Int?

    /// 部署操作
    var deployCmd:String?

    /// 1使用输入的操作，2使用程序自带操作
    var cmdSource:Int?

    /// 项目类型 1tomcat,2
    var productType:Int?

    /// 下载url
    var downloadUrl:String?

    /// 云编译项目名
    var compileProject:String?

    /// 云编译构建序号
    var compileSeries:String?

    /// 云存储空间
    var ossSpace:String?

    /// 云存储目录
    var ossDir:String?

    /// Deploy Id
    var deployId:String


    public init(regionId: String,deployId:String){
        self.deployId = deployId
        super.init(regionId: regionId)
    }


    enum ModifyDeployRequestRequestCodingKeys: String, CodingKey {
        case desc
        case deploySource
        case deployCmd
        case cmdSource
        case productType
        case downloadUrl
        case compileProject
        case compileSeries
        case ossSpace
        case ossDir
        case deployId
    }

    public override func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: ModifyDeployRequestRequestCodingKeys.self)
        try container.encode(desc, forKey: .desc)
        try container.encode(deploySource, forKey: .deploySource)
        try container.encode(deployCmd, forKey: .deployCmd)
        try container.encode(cmdSource, forKey: .cmdSource)
        try container.encode(productType, forKey: .productType)
        try container.encode(downloadUrl, forKey: .downloadUrl)
        try container.encode(compileProject, forKey: .compileProject)
        try container.encode(compileSeries, forKey: .compileSeries)
        try container.encode(ossSpace, forKey: .ossSpace)
        try container.encode(ossDir, forKey: .ossDir)
        try container.encode(deployId, forKey: .deployId)

    }
}
