/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   JDCLOUD 位置信息 API
   报警通知相关信息接口

   OpenAPI spec version: v2
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  设置报警通知规则
public class SetNotifyRuleRequest:JdCloudRequest
{
    /// 告警项：singleAttack 或 targetAttack
    var item:String

    /// 0为没有，1常规,2紧急，3为常规和紧急
    var level:Int?

    /// 发送方式。0为没有,1仅邮件, 2仅短信, 3为短信和邮件
    var sendWay:Int?

    /// 发送时间方式 0为7x24，1为5x8。
    var sendTime:Int?

    /// 1启用，0禁用
    var enabled:Int?

    /// 联系人id列表, 逗号分隔
    var contactIds:String?

    /// 联系人组id列表, 逗号分隔
    var contactgroupIds:String?


    public init(regionId: String,item:String){
        self.item = item
        super.init(regionId: regionId)
    }


    enum SetNotifyRuleRequestRequestCodingKeys: String, CodingKey {
        case item
        case level
        case sendWay
        case sendTime
        case enabled
        case contactIds
        case contactgroupIds
    }

    public override func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: SetNotifyRuleRequestRequestCodingKeys.self)
        try container.encode(item, forKey: .item)
        try container.encode(level, forKey: .level)
        try container.encode(sendWay, forKey: .sendWay)
        try container.encode(sendTime, forKey: .sendTime)
        try container.encode(enabled, forKey: .enabled)
        try container.encode(contactIds, forKey: .contactIds)
        try container.encode(contactgroupIds, forKey: .contactgroupIds)

    }
}
