/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   order相关接口
   API related to order

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  查询订单列表
public class GetOrderListRequest:JdCloudRequest
{
    /// 下单开始时间
    var startTime:String?

    /// 下单结束时间
    var endTime:String?

    /// 用户pin
    var pin:String?

    /// 产品线
    var appCode:String?

    /// 产品类型
    var serviceCode:String?

    /// 流程类型
    var processType:Int?

    /// 站点类型
    var siteType:Int?

    /// 自营类型
    var selfSupportType:Int?

    /// 订单状态
    var status:Int?

    /// 订单类型
    var orderType:Int?

    /// 计费类型
    var chargeMode:Int?

    /// 渠道
    var role:Int?

    /// Start
    var start:Int?

    /// PageNum
    var pageNum:Int?

    /// PageSize
    var pageSize:Int?

    /// TotalCount
    var totalCount:Int?

    /// 付费类型
    var payType:Int?

    /// 订单编号
    var orderNumber:String?




    enum GetOrderListRequestRequestCodingKeys: String, CodingKey {
        case startTime
        case endTime
        case pin
        case appCode
        case serviceCode
        case processType
        case siteType
        case selfSupportType
        case status
        case orderType
        case chargeMode
        case role
        case start
        case pageNum
        case pageSize
        case totalCount
        case payType
        case orderNumber
    }

    public override func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: GetOrderListRequestRequestCodingKeys.self)
        try container.encode(startTime, forKey: .startTime)
        try container.encode(endTime, forKey: .endTime)
        try container.encode(pin, forKey: .pin)
        try container.encode(appCode, forKey: .appCode)
        try container.encode(serviceCode, forKey: .serviceCode)
        try container.encode(processType, forKey: .processType)
        try container.encode(siteType, forKey: .siteType)
        try container.encode(selfSupportType, forKey: .selfSupportType)
        try container.encode(status, forKey: .status)
        try container.encode(orderType, forKey: .orderType)
        try container.encode(chargeMode, forKey: .chargeMode)
        try container.encode(role, forKey: .role)
        try container.encode(start, forKey: .start)
        try container.encode(pageNum, forKey: .pageNum)
        try container.encode(pageSize, forKey: .pageSize)
        try container.encode(totalCount, forKey: .totalCount)
        try container.encode(payType, forKey: .payType)
        try container.encode(orderNumber, forKey: .orderNumber)

    }
}
