/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   配额
   关于可用组配额的接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  开启可用组的自动伸缩属性
public class StartAutoScalingRequest:JdCloudRequest
{
    /// 实例数的最小值
    var minSize:Int?

    /// 实例数的最大值
    var maxSize:Int?

    /// 发生缩容时使用的实例移除策略，三种可选：OldestInstance，NewestInstance，OldestInstanceTemplate
    var terminationStrategy:String?

    /// 可用组 ID
    var agId:String


    public init(regionId: String,agId:String){
        self.agId = agId
        super.init(regionId: regionId)
    }


    enum StartAutoScalingRequestRequestCodingKeys: String, CodingKey {
        case minSize
        case maxSize
        case terminationStrategy
        case agId
    }

    public override func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: StartAutoScalingRequestRequestCodingKeys.self)
        try container.encode(minSize, forKey: .minSize)
        try container.encode(maxSize, forKey: .maxSize)
        try container.encode(terminationStrategy, forKey: .terminationStrategy)
        try container.encode(agId, forKey: .agId)

    }
}
