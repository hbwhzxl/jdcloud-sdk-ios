/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   国际化
   针对网关返回的错误信息，返回国际化语言

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  国际化
public class GetInternationalizationRequest:JdCloudRequest
{
    /// Code
    var code:Int32

    /// Details
    var details:String

    /// Message
    var message:String

    /// Status
    var status:String


    public init(regionId: String,code:Int32,details:String,message:String,status:String){
        self.code = code
        self.details = details
        self.message = message
        self.status = status
        super.init(regionId: regionId)
    }


    enum GetInternationalizationRequestRequestCodingKeys: String, CodingKey {
        case code
        case details
        case message
        case status
    }

    public override func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: GetInternationalizationRequestRequestCodingKeys.self)
        try container.encode(code, forKey: .code)
        try container.encode(details, forKey: .details)
        try container.encode(message, forKey: .message)
        try container.encode(status, forKey: .status)

    }
}
