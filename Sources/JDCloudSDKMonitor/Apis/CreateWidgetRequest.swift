/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Dashboard APIs
   云监控Dashboard相关接口，提供创建、查询、修改、删除Dashboard等功能

   
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  创建图表
public class CreateWidgetRequest:JdCloudRequest
{
    /// Aggregated
    var aggregated:String?

    /// CreatedTime
    var createdTime:Int64?

    /// DashboardId
    var dashboardId:String?

    /// Metrics
    var metrics:WidgetMetric?

    /// Name
    var name:String?

    /// Position
    var position:WidgetPosition?

    /// Resources
    var resources:WidgetResources?

    /// ServiceCode
    var serviceCode:String?

    /// TopN
    var topN:Int?

    /// Type
    var type:String?

    /// UpdatedTime
    var updatedTime:Int64?

    /// WidgetId
    var widgetId:String?




    enum CreateWidgetRequestRequestCodingKeys: String, CodingKey {
        case aggregated
        case createdTime
        case dashboardId
        case metrics
        case name
        case position
        case resources
        case serviceCode
        case topN
        case type
        case updatedTime
        case widgetId
    }

    public override func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CreateWidgetRequestRequestCodingKeys.self)
        try container.encode(aggregated, forKey: .aggregated)
        try container.encode(createdTime, forKey: .createdTime)
        try container.encode(dashboardId, forKey: .dashboardId)
        try container.encode(metrics, forKey: .metrics)
        try container.encode(name, forKey: .name)
        try container.encode(position, forKey: .position)
        try container.encode(resources, forKey: .resources)
        try container.encode(serviceCode, forKey: .serviceCode)
        try container.encode(topN, forKey: .topN)
        try container.encode(type, forKey: .type)
        try container.encode(updatedTime, forKey: .updatedTime)
        try container.encode(widgetId, forKey: .widgetId)

    }
}
