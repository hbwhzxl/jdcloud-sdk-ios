/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   渠道商管理
   渠道商管理

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  校验添加渠道商（单个输入）
public class ValidateDistributorRequest:JdCloudRequest
{
    /// 渠道商ID
    var distributorId:String?

    /// 渠道商名称
    var distributorName:String?

    /// 京东云账户
    var pin:String?

    /// 合同编号
    var contractNo:String?

    /// 营业执照号
    var businessLicense:String?

    /// 法定代表人
    var legalRepresentative:String?

    /// 营业执照图片
    var businessLicensePic:String?

    /// 主营业务描述
    var businessDesc:String?

    /// 办公地址
    var workAddress:String?

    /// 联系人姓名
    var contracter:String?

    /// 联系人电话
    var tel:String?

    /// 邮箱
    var email:String?

    /// 所属地域
    var region:String?

    /// 入驻日期(一级渠道商手工录入、二级渠道商审批通过日期)
    var settleTime:String?

    /// 状态(0 审批中、2驳回、1 已入驻、3已停止合作)
    var status:Int?

    /// 驳回原因
    var reason:String?

    /// 级次(0一级、1 二级)
    var distributorLevel:Int?

    /// 渠道商类型(0合作伙伴、1 渠道代理)
    var distributorType:Int?

    /// 上级渠道商ID
    var parentDistributorId:String?

    /// 所属部门(0企业线、1政府线)
    var dept:Int?

    /// 京东云负责人(京东云人员erp或名称)
    var erp:String?




    enum ValidateDistributorRequestRequestCodingKeys: String, CodingKey {
        case distributorId
        case distributorName
        case pin
        case contractNo
        case businessLicense
        case legalRepresentative
        case businessLicensePic
        case businessDesc
        case workAddress
        case contracter
        case tel
        case email
        case region
        case settleTime
        case status
        case reason
        case distributorLevel
        case distributorType
        case parentDistributorId
        case dept
        case erp
    }

    public override func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: ValidateDistributorRequestRequestCodingKeys.self)
        try container.encode(distributorId, forKey: .distributorId)
        try container.encode(distributorName, forKey: .distributorName)
        try container.encode(pin, forKey: .pin)
        try container.encode(contractNo, forKey: .contractNo)
        try container.encode(businessLicense, forKey: .businessLicense)
        try container.encode(legalRepresentative, forKey: .legalRepresentative)
        try container.encode(businessLicensePic, forKey: .businessLicensePic)
        try container.encode(businessDesc, forKey: .businessDesc)
        try container.encode(workAddress, forKey: .workAddress)
        try container.encode(contracter, forKey: .contracter)
        try container.encode(tel, forKey: .tel)
        try container.encode(email, forKey: .email)
        try container.encode(region, forKey: .region)
        try container.encode(settleTime, forKey: .settleTime)
        try container.encode(status, forKey: .status)
        try container.encode(reason, forKey: .reason)
        try container.encode(distributorLevel, forKey: .distributorLevel)
        try container.encode(distributorType, forKey: .distributorType)
        try container.encode(parentDistributorId, forKey: .parentDistributorId)
        try container.encode(dept, forKey: .dept)
        try container.encode(erp, forKey: .erp)

    }
}
