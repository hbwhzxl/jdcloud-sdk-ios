/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   对等连接
   对等连接相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  创建VpcPeering接口
@objc(CreateVpcPeeringRequest)
public class CreateVpcPeeringRequest:JdCloudRequest
{
    /// VpcPeering的名字,不为空。名称取值范围：1-32个中文、英文大小写的字母、数字和下划线分隔符
    var vpcPeeringName:String

    /// VpcPeering本端Vpc的Id
    var vpcId:String

    /// VpcPeering对端Vpc的Id
    var remoteVpcId:String

    /// VpcPeering 描述，取值范围：0-256个中文、英文大小写的字母、数字和下划线分隔符
    var descriptionValue:String?


    public init(regionId: String,vpcPeeringName:String,vpcId:String,remoteVpcId:String){
        self.vpcPeeringName = vpcPeeringName
        self.vpcId = vpcId
        self.remoteVpcId = remoteVpcId
        super.init(regionId: regionId)
    }


    enum CreateVpcPeeringRequestRequestCodingKeys: String, CodingKey {
        case vpcPeeringName
        case vpcId
        case remoteVpcId
        case descriptionValue = "description"
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: CreateVpcPeeringRequestRequestCodingKeys.self)
        try encoderContainer.encode(vpcPeeringName, forKey: .vpcPeeringName)
        try encoderContainer.encode(vpcId, forKey: .vpcId)
        try encoderContainer.encode(remoteVpcId, forKey: .remoteVpcId)
        try encoderContainer.encode(descriptionValue, forKey: .descriptionValue)

    }
}
