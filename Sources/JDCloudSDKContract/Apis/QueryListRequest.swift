/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   JDCLOUD contract API
   API JDCLOUD contract API

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  查询合同列表
public class QueryListRequest:JdCloudRequest
{
    /// OrderBy
    var orderBy:String?

    /// PageSizeZero
    var pageSizeZero:Bool?

    /// 合同号
    var contractNumber:String?

    /// 查询结束时间,格式：yyyy-MM-dd HH:mm:ss
    var endTime:String?

    /// 申请纸质合同标识（1：查询纸质合同，其他查询全部)
    var type:Int?

    /// PageNum
    var pageNum:Int?

    /// 查询开始时间,格式：yyyy-MM-dd HH:mm:ss
    var startTime:String?

    /// 合同状态（1：正式，2：草稿，3：废弃）
    var status:Int?

    /// PageSize
    var pageSize:Int?

    /// CountSql
    var countSql:Bool?

    /// Reasonable
    var reasonable:Bool?

    /// 用户pin
    var pin:String?




    enum QueryListRequestRequestCodingKeys: String, CodingKey {
        case orderBy
        case pageSizeZero
        case contractNumber
        case endTime
        case type
        case pageNum
        case startTime
        case status
        case pageSize
        case countSql
        case reasonable
        case pin
    }

    public override func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: QueryListRequestRequestCodingKeys.self)
        try container.encode(orderBy, forKey: .orderBy)
        try container.encode(pageSizeZero, forKey: .pageSizeZero)
        try container.encode(contractNumber, forKey: .contractNumber)
        try container.encode(endTime, forKey: .endTime)
        try container.encode(type, forKey: .type)
        try container.encode(pageNum, forKey: .pageNum)
        try container.encode(startTime, forKey: .startTime)
        try container.encode(status, forKey: .status)
        try container.encode(pageSize, forKey: .pageSize)
        try container.encode(countSql, forKey: .countSql)
        try container.encode(reasonable, forKey: .reasonable)
        try container.encode(pin, forKey: .pin)

    }
}
