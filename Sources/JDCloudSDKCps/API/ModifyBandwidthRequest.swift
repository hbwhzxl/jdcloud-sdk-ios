/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   云物理服务器
   云物理服务器操作相关的接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  升级云物理服务器外网带宽，只能操作running或者stopped状态的服务器&lt;br/&gt;
      ///       /// - 不支持未启用外网的服务器升级带宽
      ///       /// - 外网带宽不支持降级
      ///       /// 
@objc(ModifyBandwidthRequest)
public class ModifyBandwidthRequest:JdCloudRequest
{
    /// 由客户端生成，用于保证请求的幂等性，长度不能超过36个字符；&lt;br/&gt;
      /// 如果多个请求使用了相同的clientToken，只会执行第一个请求，之后的请求直接返回第一个请求的结果&lt;br/&gt;
      /// 
    var clientToken:String?

    /// 外网带宽，单位Mbps，取值范围[1,200]
    var bandwidth:Int

    /// 云物理服务器ID
    var instanceId:String


    public init(regionId: String,bandwidth:Int,instanceId:String){
        self.bandwidth = bandwidth
        self.instanceId = instanceId
        super.init(regionId: regionId)
    }


    enum ModifyBandwidthRequestRequestCodingKeys: String, CodingKey {
        case clientToken
        case bandwidth
        case instanceId
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: ModifyBandwidthRequestRequestCodingKeys.self)
        try encoderContainer.encode(clientToken, forKey: .clientToken)
        try encoderContainer.encode(bandwidth, forKey: .bandwidth)
        try encoderContainer.encode(instanceId, forKey: .instanceId)

    }
}
