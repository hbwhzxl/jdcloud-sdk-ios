/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Memcached接口
   Memcached实例相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore
import JDCloudSDKCommon


///  查询实例列表
public class DescribeInstancesRequest:JdCloudRequest
{
    /// 页码，默认为1，取值范围：[1,∞)，页码超过总页数时，显示最后一页
    var pageNumber:Int?

    /// 分页大小，默认为10，取值范围：[10,100]
    var pageSize:Int?

    /// instanceId -实例ID，精确匹配，支持单个
        /// instanceName - 实例名称，模糊匹配，支持单个
        /// instanceType - 实例类型，精确匹配，支持单个（single：单机版，master-slave：主从版，cluster：集群版）
        /// instanceStatus - 实例状态，精确匹配，支持单个(running：运行，error：错误，creating：创建中，resizing：变配中，deleting：删除中)
        /// 
    var filters:Filter?

    /// 标签过滤条件
    var tagFilters:TagFilter?

    /// createTime - 创建时间(asc：正序，desc：倒序)
        /// 
    var sorts:Sort?




    enum DescribeInstancesRequestRequestCodingKeys: String, CodingKey {
        case pageNumber
        case pageSize
        case filters
        case tagFilters
        case sorts
    }

    public override func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: DescribeInstancesRequestRequestCodingKeys.self)
        try container.encode(pageNumber, forKey: .pageNumber)
        try container.encode(pageSize, forKey: .pageSize)
        try container.encode(filters, forKey: .filters)
        try container.encode(tagFilters, forKey: .tagFilters)
        try container.encode(sorts, forKey: .sorts)

    }
}
