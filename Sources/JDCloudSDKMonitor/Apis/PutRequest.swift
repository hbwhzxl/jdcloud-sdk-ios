/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   监控数据上报接口
   监控数据上报接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  监控数据上报。
public class PutRequest:JdCloudRequest
{
    /// 目前统一用jcloud
    var appCode:String

    /// 资源的类型，取值vm,ip,database,storage,disk,cdn,redis,balance,nat_gw,db_ro,vpn,ddos等,新接入的产品要求与opentapi命名的产品线名称一致
    var serviceCode:String

    /// 地域信息，如 cn-north-1 等
    var region:String

    /// 资源的唯一表示，一般为uuid
    var resourceId:String

    /// 监控数据点
    var dataPoints:DataPointX?


    public init(regionId: String,appCode:String,serviceCode:String,region:String,resourceId:String,dataPoints:DataPointX?){
        self.appCode = appCode
        self.serviceCode = serviceCode
        self.region = region
        self.resourceId = resourceId
        self.dataPoints = dataPoints
        super.init(regionId: regionId)
    }


    enum PutRequestRequestCodingKeys: String, CodingKey {
        case appCode
        case serviceCode
        case region
        case resourceId
        case dataPoints
    }

    public override func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: PutRequestRequestCodingKeys.self)
        try container.encode(appCode, forKey: .appCode)
        try container.encode(serviceCode, forKey: .serviceCode)
        try container.encode(region, forKey: .region)
        try container.encode(resourceId, forKey: .resourceId)
        try container.encode(dataPoints, forKey: .dataPoints)

    }
}
