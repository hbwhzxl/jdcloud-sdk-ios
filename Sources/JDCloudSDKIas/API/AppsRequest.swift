/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   JDCLOUD IAS Operateback Services API
   京东云联合登陆运营后台应用管理

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  运营后台查询app
@objc(AppsRequest)
public class AppsRequest:JdCloudRequest
{
    /// pin
    var pin:String

    /// appName
    var appName:String

    /// clientId
    var clientId:String

    /// multiTenant
    var multiTenant:Bool

    /// state
    var state:String

    /// scope
    var scope:String

    /// startTime
    var startTime:Int64

    /// endTime
    var endTime:Int64

    /// accountType
    var accountType:String

    /// pageIndex
    var pageIndex:Int

    /// pageSize
    var pageSize:Int

    /// offset
    var offset:Int


    public init(regionId: String,pin:String,appName:String,clientId:String,multiTenant:Bool,state:String,scope:String,startTime:Int64,endTime:Int64,accountType:String,pageIndex:Int,pageSize:Int,offset:Int){
        self.pin = pin
        self.appName = appName
        self.clientId = clientId
        self.multiTenant = multiTenant
        self.state = state
        self.scope = scope
        self.startTime = startTime
        self.endTime = endTime
        self.accountType = accountType
        self.pageIndex = pageIndex
        self.pageSize = pageSize
        self.offset = offset
        super.init(regionId: regionId)
    }


    enum AppsRequestRequestCodingKeys: String, CodingKey {
        case pin
        case appName
        case clientId
        case multiTenant
        case state
        case scope
        case startTime
        case endTime
        case accountType
        case pageIndex
        case pageSize
        case offset
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: AppsRequestRequestCodingKeys.self)
        try encoderContainer.encode(pin, forKey: .pin)
        try encoderContainer.encode(appName, forKey: .appName)
        try encoderContainer.encode(clientId, forKey: .clientId)
        try encoderContainer.encode(multiTenant, forKey: .multiTenant)
        try encoderContainer.encode(state, forKey: .state)
        try encoderContainer.encode(scope, forKey: .scope)
        try encoderContainer.encode(startTime, forKey: .startTime)
        try encoderContainer.encode(endTime, forKey: .endTime)
        try encoderContainer.encode(accountType, forKey: .accountType)
        try encoderContainer.encode(pageIndex, forKey: .pageIndex)
        try encoderContainer.encode(pageSize, forKey: .pageSize)
        try encoderContainer.encode(offset, forKey: .offset)

    }
}
