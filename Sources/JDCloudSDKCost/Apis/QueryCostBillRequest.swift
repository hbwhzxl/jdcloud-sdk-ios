/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   JDCLOUD COST Services API
   成本查询API接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  查询月度明细信息
public class QueryCostBillRequest:JdCloudRequest
{
    /// appCode
    var appCode:String?

    /// serviceCode
    var serviceCode:String?

    /// 消费类型 1：预付费 2：后付费
    var payType:Int?

    /// 资源Id
    var resourceId:String?

    /// 所属年月，格式 ：2018-06
    var belongDate:String

    /// 每页条数
    var pageSize:Int

    /// 第几页
    var pageIndex:Int


    public init(regionId: String,belongDate:String,pageSize:Int,pageIndex:Int){
        self.belongDate = belongDate
        self.pageSize = pageSize
        self.pageIndex = pageIndex
        super.init(regionId: regionId)
    }


    enum QueryCostBillRequestRequestCodingKeys: String, CodingKey {
        case appCode
        case serviceCode
        case payType
        case resourceId
        case belongDate
        case pageSize
        case pageIndex
    }

    public override func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: QueryCostBillRequestRequestCodingKeys.self)
        try container.encode(appCode, forKey: .appCode)
        try container.encode(serviceCode, forKey: .serviceCode)
        try container.encode(payType, forKey: .payType)
        try container.encode(resourceId, forKey: .resourceId)
        try container.encode(belongDate, forKey: .belongDate)
        try container.encode(pageSize, forKey: .pageSize)
        try container.encode(pageIndex, forKey: .pageIndex)

    }
}
