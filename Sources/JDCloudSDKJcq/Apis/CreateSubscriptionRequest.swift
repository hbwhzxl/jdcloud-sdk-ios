/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   订阅接口
   订阅相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  创建订阅
public class CreateSubscriptionRequest:JdCloudRequest
{
    /// consumerGroupId
    var consumerGroupId:String

    /// type,[sdk,endpoint]
    var type:String

    /// endpoint,当type为endpoint时必填
    var endpoint:String?

    /// 消息隐藏时间单位秒
    var messageInvisibleTimeInSeconds:Int?

    /// tags，最多5个
    var tags:String?

    /// 是否开启死信队列true，false
    var dlqEnable:Bool

    /// 最大重试次数dlqEnable为true必填
    var maxRetryTimes:Int?

    /// topic 名称
    var topicName:String


    public init(regionId: String,consumerGroupId:String,type:String,dlqEnable:Bool,topicName:String){
        self.consumerGroupId = consumerGroupId
        self.type = type
        self.dlqEnable = dlqEnable
        self.topicName = topicName
        super.init(regionId: regionId)
    }


    enum CreateSubscriptionRequestRequestCodingKeys: String, CodingKey {
        case consumerGroupId
        case type
        case endpoint
        case messageInvisibleTimeInSeconds
        case tags
        case dlqEnable
        case maxRetryTimes
        case topicName
    }

    public override func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CreateSubscriptionRequestRequestCodingKeys.self)
        try container.encode(consumerGroupId, forKey: .consumerGroupId)
        try container.encode(type, forKey: .type)
        try container.encode(endpoint, forKey: .endpoint)
        try container.encode(messageInvisibleTimeInSeconds, forKey: .messageInvisibleTimeInSeconds)
        try container.encode(tags, forKey: .tags)
        try container.encode(dlqEnable, forKey: .dlqEnable)
        try container.encode(maxRetryTimes, forKey: .maxRetryTimes)
        try container.encode(topicName, forKey: .topicName)

    }
}
