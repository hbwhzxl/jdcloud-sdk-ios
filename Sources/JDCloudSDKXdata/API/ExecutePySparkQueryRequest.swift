/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   query
   API related to XDATA-DW query

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  执行用户编写的PySpark脚本
@objc(ExecutePySparkQueryRequest)
public class ExecutePySparkQueryRequest:JdCloudRequest
{
    /// PySpark脚本
    var script:String

    /// 用户名称
    var userName:String

    /// 实例名称
    var instanceName:String

    /// 实例拥有者名称
    var instanceOwnerName:String?

    /// 脚本类型名称
    var scriptType:String?


    public init(regionId: String,script:String,userName:String,instanceName:String){
        self.script = script
        self.userName = userName
        self.instanceName = instanceName
        super.init(regionId: regionId)
    }


    enum ExecutePySparkQueryRequestRequestCodingKeys: String, CodingKey {
        case script
        case userName
        case instanceName
        case instanceOwnerName
        case scriptType
    }

    public override func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: ExecutePySparkQueryRequestRequestCodingKeys.self)
        try encoderContainer.encode(script, forKey: .script)
        try encoderContainer.encode(userName, forKey: .userName)
        try encoderContainer.encode(instanceName, forKey: .instanceName)
        try encoderContainer.encode(instanceOwnerName, forKey: .instanceOwnerName)
        try encoderContainer.encode(scriptType, forKey: .scriptType)

    }
}
