/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   云存储中间层相关接口
   云存储中间层相关接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  按条件查询pcs服务信息
        ///         /// 
public class QueryPcsRequest:JdCloudRequest
{
    /// 查询pin
    var pin:String

    /// 查询dataCenter
    var dataCenter:String

    /// 查询bucketName
    var bucketName:String?

    /// 查询url
    var url:String

    /// 查询type
    var type:String

    /// 查询startDate
    var startDate:String?

    /// 查询endDate
    var endDate:String?


    public init(regionId: String,pin:String,dataCenter:String,url:String,type:String){
        self.pin = pin
        self.dataCenter = dataCenter
        self.url = url
        self.type = type
        super.init(regionId: regionId)
    }


    enum QueryPcsRequestRequestCodingKeys: String, CodingKey {
        case pin
        case dataCenter
        case bucketName
        case url
        case type
        case startDate
        case endDate
    }

    public override func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: QueryPcsRequestRequestCodingKeys.self)
        try container.encode(pin, forKey: .pin)
        try container.encode(dataCenter, forKey: .dataCenter)
        try container.encode(bucketName, forKey: .bucketName)
        try container.encode(url, forKey: .url)
        try container.encode(type, forKey: .type)
        try container.encode(startDate, forKey: .startDate)
        try container.encode(endDate, forKey: .endDate)

    }
}
