/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   renewal相关接口
   API related to JDCLOUD

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  提交续费订单
public class RenewRequest:JdCloudRequest
{
    /// ReturnURL
    var returnURL:String?

    /// AppCode
    var appCode:String?

    /// ServiceCode
    var serviceCode:String?

    /// DataCenter
    var dataCenter:String?

    /// OperatorType
    var operatorType:String?

    /// OperatorName
    var operatorName:String?

    /// ProcessType
    var processType:Int?

    /// TimeUnit
    var timeUnit:Int?

    /// TimeSpan
    var timeSpan:Int?

    /// Sign
    var sign:String?

    /// ResourceList
    var resourceList:OrderItemVo?

    /// Ip
    var ip:String?

    /// BrowserVersion
    var browserVersion:String?

    /// ClientToken
    var clientToken:String?




    enum RenewRequestRequestCodingKeys: String, CodingKey {
        case returnURL
        case appCode
        case serviceCode
        case dataCenter
        case operatorType
        case operatorName
        case processType
        case timeUnit
        case timeSpan
        case sign
        case resourceList
        case ip
        case browserVersion
        case clientToken
    }

    public override func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: RenewRequestRequestCodingKeys.self)
        try container.encode(returnURL, forKey: .returnURL)
        try container.encode(appCode, forKey: .appCode)
        try container.encode(serviceCode, forKey: .serviceCode)
        try container.encode(dataCenter, forKey: .dataCenter)
        try container.encode(operatorType, forKey: .operatorType)
        try container.encode(operatorName, forKey: .operatorName)
        try container.encode(processType, forKey: .processType)
        try container.encode(timeUnit, forKey: .timeUnit)
        try container.encode(timeSpan, forKey: .timeSpan)
        try container.encode(sign, forKey: .sign)
        try container.encode(resourceList, forKey: .resourceList)
        try container.encode(ip, forKey: .ip)
        try container.encode(browserVersion, forKey: .browserVersion)
        try container.encode(clientToken, forKey: .clientToken)

    }
}
