/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   dmp数据查询接口
   dmp数据查询接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore

/// 根据设备ID获取是否有匹配的人群包
@objc(GetPackageIdResult)
public class GetPackageIdResult:NSObject,JdCloudResult
{
    /// true为成功，false为失败
    var status:Bool?

    /// 描述信息
    var message:String?

    /// Map&lt;String,String&gt;序列化后的字符串，需要再次转换并使用。Key为deviceId，value为品牌编码，表示匹配上，没在返回结果中的设备id，表示没有匹配上
    var data:String?



    public override init(){
        super.init()
    }

    enum GetPackageIdResultCodingKeys: String, CodingKey {
        case status
        case message
        case data
    }

    required public init(from decoder: Decoder) throws {
        let decoderContainer = try decoder.container(keyedBy: GetPackageIdResultCodingKeys.self)
        self.status = try decoderContainer.decode(Bool?.self, forKey: .status)
        self.message = try decoderContainer.decode(String?.self, forKey: .message)
        self.data = try decoderContainer.decode(String?.self, forKey: .data)
    }
}
public extension GetPackageIdResult{
    public func encode(to encoder: Encoder) throws {
        var encoderContainer = encoder.container(keyedBy: GetPackageIdResultCodingKeys.self)
        try encoderContainer.encode(status, forKey: .status)
        try encoderContainer.encode(message, forKey: .message)
        try encoderContainer.encode(data, forKey: .data)
    }
}
