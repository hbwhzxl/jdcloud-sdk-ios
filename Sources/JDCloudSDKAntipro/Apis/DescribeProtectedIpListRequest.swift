/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   Anti DDoS Protection Package Instance APIs
   Anti DDoS Protection Package Instance APIs

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  查询已防护 IP 列表
public class DescribeProtectedIpListRequest:JdCloudRequest
{
    /// 页码, 默认为 1
    var pageNumber:Int?

    /// 分页大小, 默认为 10, 取值范围 [10, 100]
    var pageSize:Int?

    /// 实例 Id, 缺省时查询用户所有已防护 IP
    var instanceId:Int?

    /// 被防护 IP类型: 0: 全部, 1: 弹性公网 IP, 2: 云物理服务器 IP
    var type:Int

    /// 被防护 IP, 支持模糊查询
    var ip:String?


    public init(regionId: String,type:Int){
        self.type = type
        super.init(regionId: regionId)
    }


    enum DescribeProtectedIpListRequestRequestCodingKeys: String, CodingKey {
        case pageNumber
        case pageSize
        case instanceId
        case type
        case ip
    }

    public override func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: DescribeProtectedIpListRequestRequestCodingKeys.self)
        try container.encode(pageNumber, forKey: .pageNumber)
        try container.encode(pageSize, forKey: .pageSize)
        try container.encode(instanceId, forKey: .instanceId)
        try container.encode(type, forKey: .type)
        try container.encode(ip, forKey: .ip)

    }
}
