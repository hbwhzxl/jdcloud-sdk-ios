/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   消费管理
   用户中心消费管理API接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  导出资源账单
public class ExportResourceBillRequest:JdCloudRequest
{
    /// 业务线
    var appCode:String?

    /// 产品线名称
    var serviceCode:String?

    /// 计费类型 1:按配置 2:按用量 3:包年包月
    var billingType:Int?

    /// payType 1:预付费  2:后付费
    var payType:Int?

    /// 时间类型   1：按账期   2:按消费时间
    var timeType:Int?

    /// startTime
    var startTime:String?

    /// endTime
    var endTime:String?

    /// site 站点信息 0:公有云主站
    var site:Int?

    /// role
    var role:Int?




    enum ExportResourceBillRequestRequestCodingKeys: String, CodingKey {
        case appCode
        case serviceCode
        case billingType
        case payType
        case timeType
        case startTime
        case endTime
        case site
        case role
    }

    public override func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: ExportResourceBillRequestRequestCodingKeys.self)
        try container.encode(appCode, forKey: .appCode)
        try container.encode(serviceCode, forKey: .serviceCode)
        try container.encode(billingType, forKey: .billingType)
        try container.encode(payType, forKey: .payType)
        try container.encode(timeType, forKey: .timeType)
        try container.encode(startTime, forKey: .startTime)
        try container.encode(endTime, forKey: .endTime)
        try container.encode(site, forKey: .site)
        try container.encode(role, forKey: .role)

    }
}
