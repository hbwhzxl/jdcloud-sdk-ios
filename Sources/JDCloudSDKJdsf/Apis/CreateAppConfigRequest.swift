/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   应用配置列表
   获取应用配置列表，创建配置接口

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  创建应用配置
public class CreateAppConfigRequest:JdCloudRequest
{
    /// 配置名称
    var appConfigName:String

    /// 应用名称
    var appName:String

    /// 配置内容
    var appConfigContent:String

    /// 配置版本号
    var appConfigVersion:Int32

    /// 版本备注信息
    var appConfigRemark:String?


    public init(regionId: String,appConfigName:String,appName:String,appConfigContent:String,appConfigVersion:Int32){
        self.appConfigName = appConfigName
        self.appName = appName
        self.appConfigContent = appConfigContent
        self.appConfigVersion = appConfigVersion
        super.init(regionId: regionId)
    }


    enum CreateAppConfigRequestRequestCodingKeys: String, CodingKey {
        case appConfigName
        case appName
        case appConfigContent
        case appConfigVersion
        case appConfigRemark
    }

    public override func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CreateAppConfigRequestRequestCodingKeys.self)
        try container.encode(appConfigName, forKey: .appConfigName)
        try container.encode(appName, forKey: .appName)
        try container.encode(appConfigContent, forKey: .appConfigContent)
        try container.encode(appConfigVersion, forKey: .appConfigVersion)
        try container.encode(appConfigRemark, forKey: .appConfigRemark)

    }
}
