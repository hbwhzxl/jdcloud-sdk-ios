/* Copyright 2018 JDCLOUD.COM

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http:#www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

   renewal相关接口
   API related to JDCLOUD

   OpenAPI spec version: v1
   Contact: 

   NOTE: This class is auto generated by the jdcloud code generator program.
 */


import Foundation
import JDCloudSDKCore


///  查询续费资源列表
public class ResourceListRequest:JdCloudRequest
{
    /// AppCode
    var appCode:String?

    /// DataCenter
    var dataCenter:String?

    /// ExpireTime
    var expireTime:String?

    /// BillingType
    var billingType:String?

    /// AutoRenew
    var autoRenew:Int?

    /// PageNumber
    var pageNumber:Int?

    /// PageSize
    var pageSize:Int?

    /// ServiceCode
    var serviceCode:String?




    enum ResourceListRequestRequestCodingKeys: String, CodingKey {
        case appCode
        case dataCenter
        case expireTime
        case billingType
        case autoRenew
        case pageNumber
        case pageSize
        case serviceCode
    }

    public override func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: ResourceListRequestRequestCodingKeys.self)
        try container.encode(appCode, forKey: .appCode)
        try container.encode(dataCenter, forKey: .dataCenter)
        try container.encode(expireTime, forKey: .expireTime)
        try container.encode(billingType, forKey: .billingType)
        try container.encode(autoRenew, forKey: .autoRenew)
        try container.encode(pageNumber, forKey: .pageNumber)
        try container.encode(pageSize, forKey: .pageSize)
        try container.encode(serviceCode, forKey: .serviceCode)

    }
}
